plugins {
    id 'java'
    id 'application'
    // dependencyManagement用
    id 'io.spring.dependency-management' version '1.1.5'
    // bootRunのため。
    id 'org.springframework.boot' version '3.2.4'
    // thin jarを作成する
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.springframework.boot.experimental.thin-launcher' version '1.0.31.RELEASE'
}

group = 'com.github.miyohide'
version = '1.0'

repositories {
    mavenCentral()
}

application {
    mainClass = 'com.github.miyohide.App'
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.*
assemble.dependsOn = [thinJar, shadowJar]
shadowJar.mustRunAfter thinJar

shadowJar {
    archiveClassifier = 'aws'
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    append 'META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports'
    append 'META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories']
        mergeStrategy = "append"
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-function-web'
    implementation 'org.springframework.cloud:spring-cloud-function-adapter-aws'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}